---
name: "CI"

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v2
      - name: Run the goat
        uses: seisollc/goat@main
        with:
          disable_mypy: true
  test:
    name: Test
    runs-on: ubuntu-20.04
    env:
      python_version: "{{ cookiecutter.python_version }}"
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v2
      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ "{{ env.python_version }}" }}
      - uses: actions/cache@v3
        with:
          path: ~/.local/share/virtualenvs
          key: ${{ "{{ runner.os }}" }}-python-${{ "{{ env.python_version }}" }}-pipenv-${{ "{{ hashFiles('Pipfile.lock') }}" }}
          restore-keys: |
            ${{ "{{ runner.os }}" }}-python-${{ "{{ env.python_version }}" }}-pipenv-
            ${{ "{{ runner.os }}" }}-python-
      - name: Install the dependencies
        run: |
          python -m pip install --upgrade pipenv
          pipenv install --python ${{ "{{ env.python_version }}" }} --deploy --ignore-pipfile --dev
      - name: Build the image(s)
        run: pipenv run invoke build
      - name: Run the tests
        run: pipenv run invoke test
{%- if cookiecutter.dockerhub == 'yes' %}
  distribute:
    name: Distribute
    runs-on: ubuntu-20.04
    needs:
      - lint
      - test
    if: ${{ "{{ github.event_name == 'push' }}" }}
    env:
      python_version: "{{ cookiecutter.python_version }}"
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v2
      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ "{{ env.python_version }}" }}
      - uses: actions/cache@v3
        with:
          path: ~/.local/share/virtualenvs
          key: ${{ "{{ runner.os }}" }}-python-${{ "{{ env.python_version }}" }}-pipenv-${{ "{{ hashFiles('Pipfile.lock') }}" }}
          restore-keys: |
            ${{ "{{ runner.os }}" }}-python-${{ "{{ env.python_version }}" }}-pipenv-
            ${{ "{{ runner.os }}" }}-python-
      - name: Install the dependencies
        run: |
          python -m pip install --upgrade pipenv
          pipenv install --deploy --ignore-pipfile --dev
      - name: Build the image(s)
        run: pipenv run invoke build
      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ "{{ secrets.DOCKERHUB_USERNAME }}" }}
          password: ${{ "{{ secrets.DOCKERHUB_TOKEN }}" }}
      - name: Publish the latest image to Docker Hub
        run: pipenv run invoke publish latest
{%- endif -%}
