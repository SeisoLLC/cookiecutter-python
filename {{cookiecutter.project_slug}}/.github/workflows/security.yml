---
name: "Security"

on:
{%- if cookiecutter.public == 'yes' %}
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  schedule:
    - cron: '{{ range(0, 59) | random }} {{ range(2, 4) | random }} * * *'
{%- elif cookiecutter.public == 'no' %}
  - workflow_dispatch
{%- endif %}

jobs:
  analyze:
    name: CodeQL
    runs-on: ubuntu-latest
    env:
      python_version: "{{ cookiecutter.python_version }}"
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v2
      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ "{{ env.python_version }}" }}
      - uses: actions/cache@v3
        with:
          path: ~/.local/share/virtualenvs
          key: ${{ "{{ runner.os }}" }}-python-${{ "{{ env.python_version }}" }}-pipenv-${{ "{{ hashFiles('Pipfile.lock') }}" }}
          restore-keys: |
            ${{ "{{ runner.os }}" }}-python-${{ "{{ env.python_version }}" }}-pipenv-
            ${{ "{{ runner.os }}" }}-python-
      - name: Install the dependencies
        run: |
          python -m pip install --upgrade pipenv
          pipenv install --python ${{ "{{ env.python_version }}" }} --deploy --ignore-pipfile --dev
          echo "CODEQL_PYTHON=$(pipenv run which python)" >> "${GITHUB_ENV}"
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v1
        with:
          setup-python-dependencies: false
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v1
