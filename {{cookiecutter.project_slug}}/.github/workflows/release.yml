---
name: "Release"

on:
  push:
    tags:
      # https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions#filter-pattern-cheat-sheet
{%- if cookiecutter.versioning == "SemVer-ish" %}
      - 'v[0-9]+.[0-9]+.[0-9]+'
{%- elif cookiecutter.versioning == "CalVer" %}
      - 'v2[0-1][0-9][0-9].0[0-9].[0-9][0-9]'
      - 'v2[0-1][0-9][0-9].1[0-2].[0-9][0-9]'
{%- endif %}

jobs:
  distribute:
    name: Distribute
    runs-on: Ubuntu-20.04
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v2
      - name: Retrieve the tag
        run: echo "TAG=${GITHUB_REF/refs\/tags\//}" >> $GITHUB_ENV
      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: "{{ cookiecutter.python_versions[0] }}"
      - name: Install the dependencies
        run: |
          python -m pip install --upgrade pipenv
          pipenv install --dev
      - name: Publish the release to GitHub
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ "{{ secrets.GITHUB_TOKEN }}" }}
        with:
          name: ${{ "{{ env.TAG }}" }}
          draft: false
          prerelease: false
{%- if cookiecutter.dockerhub == 'yes' %}
      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ "{{ secrets.DOCKERHUB_USERNAME }}" }}
          password: ${{ "{{ secrets.DOCKERHUB_TOKEN }}" }}
      - name: Publish the release README to Docker Hub
        uses: peter-evans/dockerhub-description@v2
        with:
          username: ${{ "{{ secrets.DOCKERHUB_USERNAME }}" }}
          password: ${{ "{{ secrets.DOCKERHUB_TOKEN }}" }}
          repository: seiso/{{ cookiecutter.project_slug }}
          short-description: {{ cookiecutter.project_short_description }}
      - name: Publish the release to Docker Hub
        run: pipenv run invoke publish release
{%- endif -%}
