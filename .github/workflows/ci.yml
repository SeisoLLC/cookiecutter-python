---
name: "CI"

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  schedule:
    - cron: '47 5 * * 0'

env:
  python_version: "3.10.5"

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v3
      - name: Run the goat
        uses: seisollc/goat@main
        with:
          # Exclude anything that contains {{ and }} in the file name
          exclude: .*\{\{.*\}\}.*
          disable_mypy: true
  test:
    name: Test
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v3
        with:
          # Necessary for the post generation hook to succeed during tests
          ref: ${{ github.ref }}
          fetch-depth: 0
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"
      - name: Setup python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.python_version }}
      - uses: actions/cache@v3
        with:
          path: ~/.local/share/virtualenvs
          key: ${{ runner.os }}-python-${{ env.python_version }}-pipenv-${{ hashFiles('Pipfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-python-${{ env.python_version }}-pipenv-
            ${{ runner.os }}-python-
      - name: Install the dependencies
        run: |
          python -m pip install --upgrade pipenv
          pipenv install --deploy --ignore-pipfile --dev
      - name: Run the tests
        run: pipenv run invoke test
